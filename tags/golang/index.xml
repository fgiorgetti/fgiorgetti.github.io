<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Fernando Giorgetti - about me</title>
    <link>https://fgiorgetti.github.io/tags/golang/</link>
    <description>Recent content in golang on Fernando Giorgetti - about me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Fernando Giorgetti</copyright>
    <lastBuildDate>Tue, 23 Aug 2022 00:21:47 -0300</lastBuildDate><atom:link href="https://fgiorgetti.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>File Watcher With Fsnotify</title>
      <link>https://fgiorgetti.github.io/posts/20220823-file-watcher-with-fsnotify/</link>
      <pubDate>Tue, 23 Aug 2022 00:21:47 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20220823-file-watcher-with-fsnotify/</guid>
      <description>Sometimes we need to watch for modifications in specific locations in the filesystem, reacting to them differently.
As an example, an alert could be triggered if a specific file is modified or a backup procedure could start as new files are created into specific directories.
There are several tools and libraries to help doing that, but since I am evaluating libraries in Go, I have decided to play with fsnotify and write a bit about it.</description>
    </item>
    
    <item>
      <title>Golang Bash Completion with Cobra API</title>
      <link>https://fgiorgetti.github.io/posts/20210203-golang-bash-completion/</link>
      <pubDate>Wed, 03 Feb 2021 17:15:08 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20210203-golang-bash-completion/</guid>
      <description>In this post, I am going to share an example that demonstrates how to use bash completion with a Golang application that uses Cobra, a library to help writing Command Line Interface (CLI) apps.
Source repository You can find the sources mentioned in this example at the following Git Repository.
Pre-requisites You must have the following packages (assuming you&amp;rsquo;re on Linux) and commands available:
go (1.15+) bash bash-completion base64 make The example application The code in the repository above demonstrates a very basic (and, let&amp;rsquo;s say, not so useful) application called bashcomp that handles the following commands:</description>
    </item>
    
  </channel>
</rss>
