<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Podman on Fernando Giorgetti - blog</title>
    <link>https://fgiorgetti.github.io/tags/podman/</link>
    <description>Recent content in Podman on Fernando Giorgetti - blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Fernando Giorgetti</copyright>
    <lastBuildDate>Mon, 17 Mar 2025 22:20:50 -0300</lastBuildDate>
    <atom:link href="https://fgiorgetti.github.io/tags/podman/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decentralizing Skupper network setup with Vault and Ansible</title>
      <link>https://fgiorgetti.github.io/posts/20250311-skupper-ansible-vault/</link>
      <pubDate>Mon, 17 Mar 2025 22:20:50 -0300</pubDate>
      <guid>https://fgiorgetti.github.io/posts/20250311-skupper-ansible-vault/</guid>
      <description>Introduction When setting up a Skupper network, a single persona doesn’t always have access to all the participant clusters, namespaces, or non-Kubernetes hosts involved.&#xA;This can create a significant hurdle for automation, as Access Tokens or Links generated at one site can’t be automatically shared with a target site.&#xA;To address this, the best approach is to assign separate personas to handle the setup of each site within the Skupper network.</description>
    </item>
    <item>
      <title>Skupper service ingress through containers</title>
      <link>https://fgiorgetti.github.io/posts/20240322-skupper-podman-ingresses/</link>
      <pubDate>Fri, 22 Mar 2024 16:19:33 -0300</pubDate>
      <guid>https://fgiorgetti.github.io/posts/20240322-skupper-podman-ingresses/</guid>
      <description>Introduction In order to evaluate some strategies for dealing with ingresses using a stable name resolution within a container network (Podman or Docker), I have used the following scenario as the foundation for this study:&#xA;In the following sections, I will describe each component in more detail.&#xA;Artifacts for each strategy are also available and they can be easily executed using podman-compose or docker compose.&#xA;Service Proxies The service proxies are the main objects to be explored here.</description>
    </item>
    <item>
      <title>Running skupper-router containers with compose</title>
      <link>https://fgiorgetti.github.io/posts/20240320-router-with-compose/</link>
      <pubDate>Wed, 20 Mar 2024 09:14:27 -0300</pubDate>
      <guid>https://fgiorgetti.github.io/posts/20240320-router-with-compose/</guid>
      <description>A compose file can also be an interesting way to run a static bundle for skupper-routers. Here I am using a two routers network, named west and east.&#xA;The west router has an inter-router link (secured with TLS) defined to connect with the east one (using skupper-router-east hostname).&#xA;All the configuration, sample certificates and compose files can be downloaded by clicking the following link: Example files (tarball).&#xA;Once you extract the tarball, you will find a new directory named example which contains the compose.</description>
    </item>
    <item>
      <title>Playing with kube files using Podman</title>
      <link>https://fgiorgetti.github.io/posts/20240319-podman-kube-play/</link>
      <pubDate>Tue, 19 Mar 2024 10:19:00 -0300</pubDate>
      <guid>https://fgiorgetti.github.io/posts/20240319-podman-kube-play/</guid>
      <description>The goal of this exercise is to create two skupper-router containers named skupper-router-east and skupper-router-west with Podman, exposing a TLS AMQP listener on the east router, with all generated credentials and router configuration included as Kubernetes descriptors (using YAML), so that these YAML files can be loaded with podman kube play to spin up the two router pods.&#xA;All files mentioned here, can be found below.&#xA;Deploying this sample To deploy this sample, run: .</description>
    </item>
  </channel>
</rss>
