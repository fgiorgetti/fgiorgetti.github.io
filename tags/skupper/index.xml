<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>skupper on Fernando Giorgetti - about me</title>
    <link>https://fgiorgetti.github.io/tags/skupper/</link>
    <description>Recent content in skupper on Fernando Giorgetti - about me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Fernando Giorgetti</copyright>
    <lastBuildDate>Wed, 20 Mar 2024 09:14:27 -0300</lastBuildDate><atom:link href="https://fgiorgetti.github.io/tags/skupper/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running skupper-router containers with compose</title>
      <link>https://fgiorgetti.github.io/posts/20240320-router-with-compose/</link>
      <pubDate>Wed, 20 Mar 2024 09:14:27 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20240320-router-with-compose/</guid>
      <description>A compose file can also be an interesting way to run a static bundle for skupper-routers. Here I am using a two routers network, named west and east.
The west router has an inter-router link (secured with TLS) defined to connect with the east one (using skupper-router-east hostname).
All the configuration, sample certificates and compose files can be downloaded by clicking the following link: Example files (tarball).
Once you extract the tarball, you will find a new directory named example which contains the compose.</description>
    </item>
    
    <item>
      <title>Playing with kube files using Podman</title>
      <link>https://fgiorgetti.github.io/posts/20240319-podman-kube-play/</link>
      <pubDate>Tue, 19 Mar 2024 10:19:00 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20240319-podman-kube-play/</guid>
      <description>The goal of this exercise is to create two skupper-router containers named skupper-router-east and skupper-router-west with Podman, exposing a TLS AMQP listener on the east router, with all generated credentials and router configuration included as Kubernetes descriptors (using YAML), so that these YAML files can be loaded with podman kube play to spin up the two router pods.
All files mentioned here, can be found below.
Deploying this sample To deploy this sample, run: .</description>
    </item>
    
    <item>
      <title>Skupper Network Deployment using Ansible</title>
      <link>https://fgiorgetti.github.io/posts/20221117-skupper-network-deployment/</link>
      <pubDate>Thu, 17 Nov 2022 16:13:04 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20221117-skupper-network-deployment/</guid>
      <description>I have prepared the following video demonstrating a new approach to set up your Skupper network using Ansible.
The example demonstrated in the video, can be found at: https://github.com/skupperproject/skupper-ansible/tree/main/examples/hello-world</description>
    </item>
    
    <item>
      <title>Maintaining your Skupper Virtual Application Network with Gitops</title>
      <link>https://fgiorgetti.github.io/posts/20210129-skupper-and-gitops/</link>
      <pubDate>Fri, 29 Jan 2021 18:27:23 -0300</pubDate>
      
      <guid>https://fgiorgetti.github.io/posts/20210129-skupper-and-gitops/</guid>
      <description>Hybrid Cloud using Skupper Skupper enables service communication, transparently, across multiple Kubernetes clusters.
For more information about Skupper, as well as documentation and great examples, please visit https://skupper.io/.
This article demonstrates how to setup and maintain a Virtual Application Network (VAN) using Skupper.
The standard documented approach for setting up a Skupper network, is through the use of its Command Line Interface (CLI) tool named skupper.
Following its documentation and some examples, you will connect your cloud applications through a set of imperative commands that will help you setting everything up.</description>
    </item>
    
  </channel>
</rss>
